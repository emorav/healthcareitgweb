// --------------------------------------------------------------------------------------------------------------------
// <copyright file="Global.asax.cs" company="Microsoft">
//     Copyright © Microsoft, 2016
// </copyright>
// <summary>
//     The class.
// </summary>
// <auto-generated />
//  -------------------------------------------------------------------------------------------------------------------

using System.Web.Configuration;

namespace HealthCare.Web
{
  using HealthCare.Core.Common;
  using HealthCare.Web.HelperClasses;
  using Microsoft.Azure.KeyVault;
  using System.Configuration;
  using System.Web.Helpers;
  using System.Web.Http;
  using System.Web.Mvc;
  using System.Web.Optimization;
  using System.Web.Routing;

  /// <summary>
  /// MVC Application
  /// </summary>
  /// <seealso cref="System.Web.HttpApplication" />
  public class MvcApplication : System.Web.HttpApplication
  {
    /// <summary>
    /// Applications the start.
    /// </summary>
    protected void Application_Start()
    {
      ViewEngines.Engines.Clear();
      ViewEngines.Engines.Add(new RazorViewEngine());
      AreaRegistration.RegisterAllAreas();
      GlobalConfiguration.Configure(WebApiConfig.Register);
      FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
      RouteConfig.RegisterRoutes(RouteTable.Routes);
      BundleConfig.RegisterBundles(BundleTable.Bundles);
      AntiForgeryConfig.UniqueClaimTypeIdentifier = System.IdentityModel.Claims.ClaimTypes.Name;
      AntiForgeryConfig.SuppressXFrameOptionsHeader = true;
      if (string.CompareOrdinal(ConfigurationManager.AppSettings["IsKeyVaultEnabled"].ToLower(), "false") == 0)
      {
        KeyVaultHelper.EncryptionKey = ConfigurationManager.AppSettings["EncryptionKey"];
        KeyVaultHelper.EncryptionSalt = ConfigurationManager.AppSettings["EncryptionSalt"];
        KeyVaultHelper.SpoPassword = ConfigurationManager.AppSettings["SpoPassword"];
        CertificateHelper.SpoPassword = KeyVaultHelper.SpoPassword;
      }
      else
      {
        CertificateHelper.GetCert();
        var keyVault =
            new KeyVaultClient(new KeyVaultClient.AuthenticationCallback(CertificateHelper.GetAccessToken));
        KeyVaultHelper.SpoPassword = keyVault.GetSecretAsync(ConfigurationManager.AppSettings["KeyVaultBaseUrl"], "SpoPassword").Result.Value;
        KeyVaultHelper.EncryptionKey = keyVault.GetSecretAsync(ConfigurationManager.AppSettings["KeyVaultBaseUrl"], "EncryptionKey").Result.Value;
        KeyVaultHelper.EncryptionSalt = keyVault.GetSecretAsync(ConfigurationManager.AppSettings["KeyVaultBaseUrl"], "EncryptionSalt").Result.Value;
        CertificateHelper.SpoPassword = KeyVaultHelper.SpoPassword;
        // set the application insights as per environment
        Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active.InstrumentationKey = WebConfigurationManager.AppSettings["iKey"];
      }
    }
  }
}
